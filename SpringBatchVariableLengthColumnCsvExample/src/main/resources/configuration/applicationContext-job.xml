<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="employee" class="com.adarsh.spring.batch.model.Employee" scope="prototype"/>

    <batch:job id="employeeJob" restartable="true">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader"
                             writer="mysqlItemWriter"
                             commit-interval="2">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <!-- Read a csv file -->
        <property name="resource" value="classpath:file/input/employee.csv"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
                <property name="tokenizers">
                    <map>
                        <entry key="FIXED-RECORD-A*" value-ref="fixedLengthLineATokenizer"/>
                        <entry key="FIXED-RECORD-B*" value-ref="fixedLengthLineBTokenizer"/>
                        <entry key="FIXED-RECORD-C*" value-ref="fixedLengthLineCTokenizer"/>
                    </map>
                </property>
                <property name="fieldSetMappers">
                    <map>
                        <entry key="*" value-ref="employeeFieldSetMapper"/>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="employeeFieldSetMapper" class="com.adarsh.spring.batch.mapper.EmployeeFieldSetMapper"/>

    <!--FIXED-RECORD-A;101AdarshKumarSinghAdarsh@kumar819741633613/09/1983-->
    <bean id="fixedLengthLineATokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <property name="names" value="${app.csv.header.name}"/>
        <property name="columns" value="15-18, 19-24, 25-29, 30-34,35-46,47-56,57-66"/>
    </bean>

    <!--FIXED-RECORD-B;102AmitKumarSinghAmit@kumar990232389104/01/1986-->
    <bean id="fixedLengthLineBTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <property name="names" value="${app.csv.header.name}"/>
        <property name="columns" value="15-18, 19-22, 23-27, 28-32,33-42,43-52,53-62"/>
    </bean>

    <!--FIXED-RECORD-C;103Radha SinghRadha@singh990237089105/04/1986-->
    <bean id="fixedLengthLineCTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <property name="names" value="${app.csv.header.name}"/>
        <property name="columns" value="15-18,19-23,24-24,25-29,30-40,41-50,51-60"/>
    </bean>


    <bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql" value="${app.mysql.query}"/>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
    </bean>

</beans>
