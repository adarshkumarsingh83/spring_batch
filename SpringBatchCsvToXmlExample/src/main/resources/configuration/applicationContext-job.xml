<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
                        http://www.springframework.org/schema/batch/spring-batch.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<batch:job id="employeeJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader"
                             writer="xmlItemWriter"
                             processor="employeeFilterProcessor"
					         commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <!-- Read a csv file -->
        <property name="resource" value="classpath:file/input/employee.csv"/>

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="${app.csv.head.name}" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="com.adarsh.spring.batch.mapper.EmployeeFieldSetMapper"/>
                </property>
            </bean>
        </property>
    </bean>



    <bean id="employeeFilterProcessor" class="com.adarsh.spring.batch.processor.EmployeeFilterProcessor" />

    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:file/output/employee.xml" />
        <property name="marshaller" ref="employeeUnmarshaller" />
    </bean>

    <!-- Read and map values to object, via jaxb2 -->
    <bean id="employeeUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>com.adarsh.spring.batch.model.Employee</value>
            </list>
        </property>
    </bean>

</beans>
